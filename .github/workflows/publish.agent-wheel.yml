name: Publish Agent Wheel

on:
  workflow_dispatch: # manual trigger
    inputs:
      buildConfig:
        description: Build Configuration
        required: true
        default: release
  # push:
  #   branches: [main]

jobs:
  generate-timestamp:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.makestamp.outputs.time }}
    steps:
    - name: Make Timestamp
      id: makestamp
      uses: nanzm/get-time-action@v1.1
      with:
        format: "YYYYMMDDHHmmss"

  publish-agent-wheel:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.9"
      POETRY_VERSION: "1.1.14"
      WORKDIR: "./app/HutchAgent"
      RELEASE_NAME: agent-${{ needs.generate-timestamp.outputs.timestamp }}
    needs: generate-timestamp
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      - name: Install agent deps
        working-directory: ${{ env.WORKDIR }}
        run: poetry install --no-dev
      - name: Build dist
        working-directory: ${{ env.WORKDIR }}
        run: poetry build
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          prerelease: true
          files: |
            ${{ env.WORKDIR }}/dist/*
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true

  publish-agent-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      APP_NAME: agent
      WORKDIR: ./app/HutchAgent
      NEXT_TAG: next
      TS_TAG: ${{ needs.generate-timestamp.outputs.timestamp }}
      REGISTRY: ghcr.io
    needs: generate-timestamp
    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata action
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.APP_NAME }}
          tags: |
            ${{ env.TS_TAG }}
            ${{ env.NEXT_TAG }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.1.1
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ${{ env.WORKDIR }}
