{
  "openapi": "3.0.1",
  "info": {
    "title": "Hutch Agent API",
    "description": "A REST API for interacting with the Hutch Agent",
    "license": {
      "name": "MIT License",
      "url": "https://github.com/HDRUK/hutch/blob/main/LICENSE"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Jobs/{id}/crate": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Submit a crate via POST Request Body for an already created job with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the of the job to submit a crate for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "crate": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "crate": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The Submitted Request Crate was accepted and queued to be executed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusModel"
                }
              }
            }
          },
          "400": {
            "description": "The Request Crate was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A Job with the provided ID could not be found."
          },
          "409": {
            "description": "This Job already has a Request Crate submitted."
          }
        }
      }
    },
    "/api/Jobs/{id}/crateSource": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Provide a Cloud Storage Crate Source via POST Request Body for an already created job with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the of the job to provide a crate URL for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object detailing where to find a TRE-FX 5 Safes RO-Crate for the job,\r\n            which Hutch can retrieve from a configured Cloud Storage Provider.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileStorageDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FileStorageDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FileStorageDetails"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The Submitted Request Crate Source was accepted and queued to be fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusModel"
                }
              }
            }
          },
          "400": {
            "description": "The provided details were invalid."
          },
          "404": {
            "description": "A Job with the provided ID could not be found."
          },
          "409": {
            "description": "This Job already has a Request Crate submitted."
          }
        }
      }
    },
    "/api/Jobs/{id}/crateUrl": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Provide a crate URL via POST Request Body for an already created job with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the of the job to provide a crate URL for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A URL to a TRE-FX 5 Safes RO-Crate for the job, which Hutch can retrieve with a GET Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The Submitted Request Crate URL was accepted and queued to be fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusModel"
                }
              }
            }
          },
          "400": {
            "description": "The provided URL was invalid."
          },
          "404": {
            "description": "A Job with the provided ID could not be found."
          },
          "409": {
            "description": "This Job already has a Request Crate submitted."
          }
        }
      }
    },
    "/api/Jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Creates a Job entry and, if provided with a remote Crate, queues the job for Crate fetching.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Job was registered, and is awaiting submission of a Request Crate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusModel"
                }
              }
            }
          },
          "202": {
            "description": "The Job was registered, and the submitted Request Crate Source queued to be fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusModel"
                }
              }
            }
          },
          "400": {
            "description": "The Job details submitted are invalid."
          },
          "409": {
            "description": "Hutch is already actively managing a Job with this Id."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DatabaseConnectionDetails": {
        "required": [
          "database",
          "hostname",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "hostname": {
            "minLength": 1,
            "type": "string",
            "description": "Database Server Hostname"
          },
          "port": {
            "type": "integer",
            "description": "Database Server Port. Defaults to PostgreSQL Default (5432)",
            "format": "int32"
          },
          "database": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the Database to connect to"
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Username with access to the database"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Password with access to the database"
          }
        },
        "additionalProperties": false
      },
      "FileStorageDetails": {
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "Cloud Storage Host e.g. a Min.io Server. Defaults to preconfigured value if omitted."
          },
          "secure": {
            "type": "boolean",
            "description": "Connection to HutchAgent.Models.FileStorageDetails.Host should use SSL.\r\nDefaults to true; should only really be false for development/testing."
          },
          "bucket": {
            "type": "string",
            "description": "Cloud Storage Container name e.g. a Min.io Bucket. Defaults to preconfigured value if omitted."
          },
          "path": {
            "minLength": 1,
            "type": "string",
            "description": "Object ID for a single Cloud Storage item in the named HutchAgent.Models.FileStorageDetails.Bucket,\r\nfunctionally the \"Path\" to the stored file."
          },
          "accessKey": {
            "type": "string",
            "description": "Access Key for Cloud Storage. If omitted, will use OIDC if configured, or default to preconfigured value if not."
          },
          "secretKey": {
            "type": "string",
            "description": "Secret Key for Cloud Storage. If omitted, will use OIDC if configured, or default to preconfigured value if not."
          }
        },
        "additionalProperties": false,
        "description": "Details for the Cloud Storage of a specific File"
      },
      "JobStatusModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the Job"
          },
          "status": {
            "type": "string",
            "description": "The current status of the Job"
          }
        },
        "additionalProperties": false,
        "description": "Public model for reporting a Job's Status in API responses."
      },
      "SubmitJobModel": {
        "required": [
          "jobId"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "minLength": 1,
            "type": "string",
            "description": "This is a Job ID as provided by the TRE Agent.\r\nHutch continues to use it to identify the job internally,\r\nbut also to interact with the TRE Agent in future."
          },
          "dataAccess": {
            "$ref": "#/components/schemas/DatabaseConnectionDetails"
          },
          "crateUrl": {
            "type": "string",
            "description": "<br>\r\n             Optional absolute URL where the Job's RO-Crate can be fetched from with a GET request.\r\n             \r\n<br>Mutually exclusive with HutchAgent.Models.SubmitJobModel.CrateUrl\r\n<br>\r\n             If all crate values are omitted at the time of Submission,\r\n             a later submission can be made to provide a Remote URL, Cloud Storage details, or a binary crate payload.\r\n             ",
            "format": "uri",
            "nullable": true
          },
          "crateSource": {
            "$ref": "#/components/schemas/FileStorageDetails"
          }
        },
        "additionalProperties": false
      }
    }
  }
}