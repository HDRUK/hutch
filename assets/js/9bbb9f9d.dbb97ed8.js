"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[831],{38570:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(70079);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(t),h=i,p=f["".concat(s,".").concat(h)]||f[h]||d[h]||o;return t?r.createElement(p,a(a({ref:n},u),{},{components:t})):r.createElement(p,a({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},49166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(52203),i=(t(70079),t(38570));const o={sidebar_position:2},a="Hutch Agent",l={unversionedId:"getting-started/configuration/agent",id:"getting-started/configuration/agent",title:"Hutch Agent",description:"Hutch can be configured using the following source in the usual .NET way, in order of precedence:",source:"@site/docs/getting-started/configuration/agent.md",sourceDirName:"getting-started/configuration",slug:"/getting-started/configuration/agent",permalink:"/hutch/docs/getting-started/configuration/agent",draft:!1,editUrl:"https://github.com/hdruk/hutch/tree/main/website/docs/getting-started/configuration/agent.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Configuration",permalink:"/hutch/docs/category/configuration"},next:{title:"WorkflowHub in a TRE",permalink:"/hutch/docs/getting-started/configuration/workflowhub-spoof"}},s={},c=[{value:"Available values",id:"available-values",level:2},{value:"Guidance",id:"guidance",level:2},{value:"Intermediary Store",id:"intermediary-store",level:3},{value:"Workflow Executor",id:"workflow-executor",level:3}],u={toc:c};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hutch-agent"},"Hutch Agent"),(0,i.kt)("p",null,"Hutch can be configured using the following source in ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration"},"the usual .NET way"),", in order of precedence:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"appsettings.json")," adjacent to the binary (",(0,i.kt)("inlineCode",{parentName:"li"},"HutchAgent.dll"),")"),(0,i.kt)("li",{parentName:"ul"},"Environment Variables (with double underscore ",(0,i.kt)("inlineCode",{parentName:"li"},"__")," as a hierarchical separator)"),(0,i.kt)("li",{parentName:"ul"},"Command line arguments"),(0,i.kt)("li",{parentName:"ul"},"(.NET User Secrets in development)")),(0,i.kt)("p",null,"Below are the available configurable settings for ",(0,i.kt)("inlineCode",{parentName:"p"},"HutchAgent"),". The variables shown are the defaults, unless specified otherwise."),(0,i.kt)("h2",{id:"available-values"},"Available values"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Kestrel options e.g. port bindings\n  // By default Hutch binds on all interfaces on specific non-privileged ports\n  // You can change the binding configuration\n  // but Hutch should not be bound on privileged ports (< 1024) if you don\'t want to run it evelated\n  // and Hutch should not be bound on 80/443 in airgapped environments where nginx is used to proxy workflow fetching (as nginx will use those ports)\n  "Kestrel": {\n    "Endpoints": {\n      "Http": {\n        "Url": "http://0.0.0.0:5209"\n      },\n      "Https": {\n        "Url": "https://0.0.0.0:7239"\n      }\n    }\n  },\n\n  // Local working paths used by Hutch itself\n  "Paths": {\n    "WorkingDirectoryBase": "$HOME/hutch-workdir", // Hutch\'s working directory\n    "Jobs": "jobs" // Sub-directory for per-job working directories\n  },\n\n  // Configuration for Hutch\'s internal Action Queue (RabbitMQ)\n  // For actual defaults, see RabbitMQ documentation\n  "Queue": {\n    "Hostname": "", // RabbitMQ Host\n    "Port": 0, // RabbitMQ Port\n    "UserName": "", // RabbitMQ User\n    "Password": "" // RabbitMQ Password\n  },\n\n  // Configure the internal queue name, how it checks for jobs, and how many can run concurrently\n  "JobActionsQueueOptions": {\n    "QueueName": "WorkflowJobActions",\n    "PollingIntervalSeconds": 5, // How often Hutch checks the queue for new Actions\n    "MaxParallelism": 10 // How many actions from the queue will Hutch run concurrently\n  },\n\n  // MinIO Intermediary Store Defaults\n  // These are are used for Egress in Standalone Mode\n  // And as a fallback for Submissions/Egress when only partial bucket details are provided.\n  "StoreDefaults": {\n    "Host": "localhost:9000",\n    "AccessKey": "",\n    "SecretKey": "",\n    "Secure": true,\n    "Bucket": ""\n  },\n\n  "IdentityProvider": {\n    "OpenIdBaseUrl": "", // e.g. https://keycloak.tre.com/realms/tre-fx\n    \n    // If you want Hutch to use OIDC for Minio credentials,\n    // this must match the Minio OIDC Client ID!\n    // Otherwise it can be a Hutch specific client\n    "ClientId": "",\n\n    // May be optional depending on the IdP client config\n    // If required and using OIDC for Minio credentials,\n    // this must match the Minio OIDC Client Secret!\n    "ClientSecret": "",\n    \n    // User credentials Hutch will act on behalf of\n    "Username": "",\n    "Password": ""\n  },\n\n  // Configuration for tracking Workflow Execution\n  // Currently WfExS specific\n  "WorkflowExecutor": {\n    "ExecutorPath": "$HOME/WfExS-backend",\n    "VirtualEnvironmentPath": "$HOME/WfExS-backend/.pyWEenv/bin/activate",\n    "LocalConfigPath": "$HOME/WfExS-backend/local_config.yaml",\n    "ContainerEngine": "docker", // other valid options are "singularity" and "podman"\n\n    // The below are more for development / debugging\n\n    // If a path is provided, Hutch will skip Workflow Execution altogether\n    // and instead use the zip file from this path as if it were the execution output\n    "SkipExecutionUsingOutputFile": "", // e.g. `"path/to/execution.crate.zip"`\n\n    // Really we always want a full crate, but some wfexs configs\n    // particularly with certain container engines\n    // are unreliable with `--full`` on or off, so it can be configured for testing.\n    "SkipFullProvenanceCrate": false,\n    \n    // by default Hutch detaches from the wfexs process once it starts it,\n    // to free up threads.\n    // This forces Hutch to keep the executing thread attached to the wfexs process\n    // which means you can see stdout/stderr from wfexs in realtime,\n    // and better understand the circumstances under which wfexs exited.\n    // Intended for dev/test use while executing one job at a time.\n    "RemainAttached": false,\n  },\n\n  // Connection strings for different services\n  "ConnectionStrings": {\n    // The database tracking the jobs in the agent\n    "AgentDb": "Data Source=HutchAgent.db"\n  },\n\n  // Configurable details to add to published Results Crates.\n  "CratePublishing": {\n    // this section defaults to `null`\n    "Publisher": {\n      "Id": "" // Desired Identifier (typically URL) for the Publisher in Results Crates.\n    },\n    // this section defaults to `null`\n    "License": {\n      "Uri": "", // A URI to the license e.g. https://spdx.org/licenses/CC-BY-4.0\n      "Properties": {\n        "Identifier": null, // short-form of the license e.g. CC-BY-4.0\n        "Name": null // long-form name of the license e.g. Creative Commons Attribution 4.0 International\n      }\n    }\n  },\n\n  // This section tells Hutch where the controller API is hosted\n  "ControllerApi": {\n    // The URL of the controller API\n    "BaseUrl": ""\n  },\n\n  // Development Flags\n  // These are really intended for development or debugging use\n  // and their continued presence cannot be relied upon from one build to the next!\n  "Flags": {\n    "StandaloneMode": false, // Hutch will skip TRE Controller interactions\n    "RetainFailures": false // Hutch will not clean up working directories or database records for jobs that fail.\n  }\n}\n')),(0,i.kt)("h2",{id:"guidance"},"Guidance"),(0,i.kt)("h3",{id:"intermediary-store"},"Intermediary Store"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Primarily for Standalone mode or as a fallback; you may configure MinIO connection details to a default store here.")),(0,i.kt)("h3",{id:"workflow-executor"},"Workflow Executor"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ExecutorPath")," must be the directory where WfExS is installed.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"VirtualEnvironmentPath")," must be the path to the ",(0,i.kt)("inlineCode",{parentName:"p"},"activate")," script in the WfExS install directory, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"/path/to/WfExS-backend/.pyWEenv/bin/activate"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalConfigPath")," is the path of a YAML file describing your WfExS installation."))))}d.isMDXComponent=!0}}]);