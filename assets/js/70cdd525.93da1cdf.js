"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[326],{8570:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(79);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||f[u]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(2203),o=(n(79),n(8570));const a={sidebar_position:3},i="Running WfExS",l={unversionedId:"devs/external-systems/wfexs/running-wfexs",id:"devs/external-systems/wfexs/running-wfexs",title:"Running WfExS",description:"For a full description of all functions offered by WfExS, refer to the README at https://github.com/inab/WfExS-backend.",source:"@site/docs/devs/external-systems/wfexs/running-wfexs.md",sourceDirName:"devs/external-systems/wfexs",slug:"/devs/external-systems/wfexs/running-wfexs",permalink:"/hutch/docs/devs/external-systems/wfexs/running-wfexs",draft:!1,editUrl:"https://github.com/hdruk/hutch/tree/main/website/docs/devs/external-systems/wfexs/running-wfexs.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"devGuide",previous:{title:"Configuration",permalink:"/hutch/docs/devs/external-systems/wfexs/config"},next:{title:"Running HutchWorker workflow",permalink:"/hutch/docs/devs/external-systems/wfexs/running-test-workflow"}},s={},p=[{value:"Gotchas!",id:"gotchas",level:2},{value:"Docker needing <code>sudo</code> to run",id:"docker-needing-sudo-to-run",level:3},{value:"<code>python-dxf</code> version 9.0.1",id:"python-dxf-version-901",level:3},{value:"Correct workflow packing",id:"correct-workflow-packing",level:3}],c={toc:p};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-wfexs"},"Running WfExS"),(0,o.kt)("p",null,"For a full description of all functions offered by WfExS, refer to the README at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/inab/WfExS-backend"},"https://github.com/inab/WfExS-backend"),"."),(0,o.kt)("p",null,"To run a workflow using WfExS, first stage a workflow:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"./WfExS_backend.py -L <path_to_wfexs_config.yaml> stage -W <stage_file.yaml>\n")),(0,o.kt)("p",null,"This will prepare the workflow to run and provide a pithy random name to refer to when executing the workflow. If a nickname is provided in the stage file it will be added as a prefix to this."),(0,o.kt)("p",null,"To run the workflow use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'./WfExS_backend.py -L <path_to_wfexs_config.yaml> staged-workdir offline-exec "pithy random name"\n')),(0,o.kt)("p",null,"And finally, to package the workflow into an RO-Crate, which will include references to the inputs, outputs and workflows, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'./WfExS_backend.py \\\n  -L <path_to_wfexs_config.yaml> \\\n  staged-workdir create-prov-crate "pithy random name" ROCrate.zip \\\n  --full\n')),(0,o.kt)("h2",{id:"gotchas"},"Gotchas!"),(0,o.kt)("p",null,'There are a few "gotchas" when running WfExS at the time of writing.'),(0,o.kt)("h3",{id:"docker-needing-sudo-to-run"},"Docker needing ",(0,o.kt)("inlineCode",{parentName:"h3"},"sudo")," to run"),(0,o.kt)("p",null,"This can be fixed by following the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"},"post-installation steps")," for linux."),(0,o.kt)("h3",{id:"python-dxf-version-901"},(0,o.kt)("inlineCode",{parentName:"h3"},"python-dxf")," version 9.0.1"),(0,o.kt)("p",null,"If needed force the downgrade of the python-dxf library by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pip install --force-reinstall python-dxf==9.0.1\n")),(0,o.kt)("h3",{id:"correct-workflow-packing"},"Correct workflow packing"),(0,o.kt)("p",null,"WfExS defaults to using ",(0,o.kt)("inlineCode",{parentName:"p"},"cwltool")," to run workflows, which in turn will be written using ",(0,o.kt)("a",{parentName:"p",href:"https://www.commonwl.org/user_guide/introduction/index.html"},"Common Workflow Language"),". Currently there is a bug in ",(0,o.kt)("inlineCode",{parentName:"p"},"cwltool")," which means that sometimes the workflow cannot be processed as expected by WfExS."),(0,o.kt)("p",null,"To get around this, it is best to write the workflow in 2 parts. The first part will be the the actual the command that will be run. See ",(0,o.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/inab/ipc_workflows/cosifer-20210322/cosifer/cwl/cosifer.cwl"},"here")," for an example of this part. The second will be the actual workflow detailing the steps. See ",(0,o.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/inab/ipc_workflows/cosifer-20210322/cosifer/cwl/cosifer-workflow.cwl"},"here")," for an example."),(0,o.kt)("admonition",{title:"Note the differences between the two links.",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The first is an example of a ",(0,o.kt)("inlineCode",{parentName:"p"},"CommandLineTool")," and says ",(0,o.kt)("inlineCode",{parentName:"p"},"CommandLineTool")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"class")," attribute of the file. Here the ",(0,o.kt)("inlineCode",{parentName:"p"},"baseCommand")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," are specified. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," the flags for the command line tool are specified. The ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs")," capture the outputs of the command which can then be linked back to the workflow file. The second file is a ",(0,o.kt)("inlineCode",{parentName:"p"},"Workflow")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"Workflow")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"class")," attribute. This file specifies the ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," that will be passed to the steps in the ",(0,o.kt)("inlineCode",{parentName:"p"},"steps")," array. It also lists the final ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs")," to be expected from the workflow. Each step in ",(0,o.kt)("inlineCode",{parentName:"p"},"steps")," has a ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," attribute, which in this use case will be the path to ",(0,o.kt)("inlineCode",{parentName:"p"},"CommandLineTool")," file, an ",(0,o.kt)("inlineCode",{parentName:"p"},"in")," attribute mapping inputs from ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," to the step, and an ",(0,o.kt)("inlineCode",{parentName:"p"},"out")," array linking back to the ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs"),".")))}f.isMDXComponent=!0}}]);