"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9116],{8570:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(79);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(r),k=o,d=m["".concat(s,".").concat(k)]||m[k]||c[k]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5647:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(2203),o=(r(79),r(8570));const a={},i="rquest-omop-worker",l={unversionedId:"workflows/rquest-omop-worker/worker",id:"workflows/rquest-omop-worker/worker",title:"rquest-omop-worker",description:"This workflow can be used to solve Availability and Distribution queries from Rquest.",source:"@site/docs/workflows/rquest-omop-worker/worker.md",sourceDirName:"workflows/rquest-omop-worker",slug:"/workflows/rquest-omop-worker/worker",permalink:"/hutch/docs/workflows/rquest-omop-worker/worker",draft:!1,editUrl:"https://github.com/hdruk/hutch/tree/main/website/docs/workflows/rquest-omop-worker/worker.md",tags:[],version:"current",frontMatter:{},sidebar:"workflows",previous:{title:"Rquest OMOP Worker",permalink:"/hutch/docs/category/rquest-omop-worker"},next:{title:"Sample OMOP Data",permalink:"/hutch/docs/category/sample-omop-data"}},s={},u=[{value:"Workflow inputs",id:"workflow-inputs",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rquest-omop-worker"},(0,o.kt)("inlineCode",{parentName:"h1"},"rquest-omop-worker")),(0,o.kt)("p",null,"This workflow can be used to solve Availability and Distribution queries from Rquest."),(0,o.kt)("p",null,"Example workflows can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/HDRUK/hutch"},"Hutch monorepo"),"."),(0,o.kt)("h2",{id:"workflow-inputs"},"Workflow inputs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"body"),": The file path containing the body of the request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"results_modifiers"),": A JSON string containing results modifier parameters."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"is_availability"),": a flag denoting the query is an availability query (",(0,o.kt)("strong",{parentName:"li"},"cannot be used with ",(0,o.kt)("inlineCode",{parentName:"strong"},"is_distribution")),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"is_distribution"),": a flag denoting the query is an distribution query (",(0,o.kt)("strong",{parentName:"li"},"cannot be used with ",(0,o.kt)("inlineCode",{parentName:"strong"},"is_availability")),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"results"),": (",(0,o.kt)("em",{parentName:"li"},"Optional"),") an input that specifies the output path for the results."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db_host"),": the host for the database containing the OMOP data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db_name"),": the name of the OMOP database."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db_user"),": a username with access to the database."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db_password"),": the password for the database user.")),(0,o.kt)("h1",{id:"executing-using-wfexs"},"Executing using WfExS"),(0,o.kt)("p",null,"An example WfExS stage file to run ",(0,o.kt)("inlineCode",{parentName:"p"},"rquest-omop-worker")," might look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# rquest-omop-worker.stage.yaml\n\nworkflow_id: https://raw.githubusercontent.com/HDRUK/hutch/main/workflows/sec-hutchx86.cwl\nworkflow_config:\n  container: \'docker\'\n  secure: false\nnickname: \'myNickName\'\ncacheDir: /tmp/wfexszn6siq2jtmpcache\ncrypt4gh:\n  key: rquest-omop-worker.stage.key\n  passphrase: mpel nite ified g\n  pub: rquest-omop-worker.stage.pub\noutputs:\n  output_file:\n    c-l-a-s-s: File\n    glob: "output.json"\nparams:\n  body:\n    c-l-a-s-s: File\n    url:\n      - https://raw.githubusercontent.com/HDRUK/hutch/main/workflows/inputs/rquest-query.json\n  is_availability: true\n  db_host: "localhost"\n  db_name: "hutch"\n  db_user: "postgres"\n  db_password: "example"\n')))}c.isMDXComponent=!0}}]);