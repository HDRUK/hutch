"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[425],{8570:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(79);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,g=c["".concat(p,".").concat(h)]||c[h]||u[h]||l;return n?a.createElement(g,o(o({ref:t},s),{},{components:n})):a.createElement(g,o({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5188:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(2203),r=(n(79),n(8570));const l={},o="Hutch Agent",i={unversionedId:"devs/getting-started/agent",id:"devs/getting-started/agent",title:"Hutch Agent",description:"Installation",source:"@site/docs/devs/getting-started/agent.md",sourceDirName:"devs/getting-started",slug:"/devs/getting-started/agent",permalink:"/hutch/docs/devs/getting-started/agent",draft:!1,editUrl:"https://github.com/hdruk/hutch/tree/main/website/docs/devs/getting-started/agent.md",tags:[],version:"current",frontMatter:{},sidebar:"devGuide",previous:{title:"Getting Started",permalink:"/hutch/docs/devs/getting-started/"},next:{title:"Hutch Manager",permalink:"/hutch/docs/devs/getting-started/manager"}},p={},d=[{value:"Installation",id:"installation",level:3},{value:"Running <code>hutchagent</code>",id:"running-hutchagent",level:3},{value:"DB for logging",id:"db-for-logging",level:3},{value:"Building",id:"building",level:3},{value:"Adding and removing deps",id:"adding-and-removing-deps",level:3}],s={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hutch-agent"},"Hutch Agent"),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First, make sure you install ",(0,r.kt)("a",{parentName:"p",href:"https://hatch.pypa.io/latest/install/"},(0,r.kt)("inlineCode",{parentName:"a"},"hatch")),"."),(0,r.kt)("p",null,"Run the following commands in ",(0,r.kt)("inlineCode",{parentName:"p"},"app/HutchAgent"),"."),(0,r.kt)("p",null,"Once you have ",(0,r.kt)("inlineCode",{parentName:"p"},"hatch")," installed, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch env create\n")),(0,r.kt)("p",null,"and this will set up your environment to use the agent with RabbitMQ and Postgres."),(0,r.kt)("p",null,"If you would like to set the agent up to work with another database, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch env create mysql\n")),(0,r.kt)("p",null,"for MySQL, or:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch env create sqlserver\n")),(0,r.kt)("p",null,"to work with SQL Server."),(0,r.kt)("h3",{id:"running-hutchagent"},"Running ",(0,r.kt)("inlineCode",{parentName:"h3"},"hutchagent")),(0,r.kt)("p",null,"Run the following commands in ",(0,r.kt)("inlineCode",{parentName:"p"},"app/HutchAgent"),"."),(0,r.kt)("p",null,"To run ",(0,r.kt)("inlineCode",{parentName:"p"},"hutchagent")," with Postgres, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch run hutchagent\n")),(0,r.kt)("p",null,"and use ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl+C")," to shut it down."),(0,r.kt)("p",null,"To run ",(0,r.kt)("inlineCode",{parentName:"p"},"hutchagent")," with MySQL, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch run mysql:hutchagent\n")),(0,r.kt)("p",null,"Or:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch run sqlserver:hutchagent\n")),(0,r.kt)("p",null,"for SQL Server."),(0,r.kt)("p",null,"Again, use ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl+C")," to shut it down."),(0,r.kt)("h3",{id:"db-for-logging"},"DB for logging"),(0,r.kt)("p",null,"The agent writes logs to a database. It also writes to the standard output as a backup in case the connection fails. The creation of the logging database is handled by ",(0,r.kt)("inlineCode",{parentName:"p"},"HutchManager")," normally, but if you want to work with the agent without the manager for development purposes, perform the following steps:"),(0,r.kt)("p",null,"At the root of the repo run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -d\n")),(0,r.kt)("p",null,"and you will get a fresh postgresql db."),(0,r.kt)("p",null,"Then in ",(0,r.kt)("inlineCode",{parentName:"p"},"app/HutchAgent"),", run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch run [env:]build-log-db -u <username> -p <password> -d <database> --drivername <drivername>\n")),(0,r.kt)("p",null,"Help can be found by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch run [env:]build-log-db --help\n")),(0,r.kt)("h3",{id:"building"},"Building"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hatch build\n")),(0,r.kt)("p",null,"That's it!"),(0,r.kt)("p",null,"To add a shared library to the build, such as those in the ",(0,r.kt)("inlineCode",{parentName:"p"},"lib")," directory of the repo, in ",(0,r.kt)("inlineCode",{parentName:"p"},"pyproject.toml"),", go to the section named ",(0,r.kt)("inlineCode",{parentName:"p"},"[tool.hatch.build.targets.wheel.force-include]")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"[tool.hatch.build.targets.sdist.force-include]")," and add the relative path to the packages you wish to include like so: ",(0,r.kt)("inlineCode",{parentName:"p"},"../../lib/name_of_shared_lib = shared_lib"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"It is recommended that you add your shared libs to the ",(0,r.kt)("inlineCode",{parentName:"p"},"lib")," folder at the root of the repo. Make sure they contain a ",(0,r.kt)("inlineCode",{parentName:"p"},"__init__.py")," file (which can be empty).")),(0,r.kt)("h3",{id:"adding-and-removing-deps"},"Adding and removing deps"),(0,r.kt)("p",null,"To add a dependency to the whole project, in ",(0,r.kt)("inlineCode",{parentName:"p"},"pyproject.toml"),", go to ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"[project]")," and add the name of the package you wish to add to the list. You should also add a version number to get more repeatable builds."),(0,r.kt)("p",null,"If you want to only add dependencies to a non-default environment, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"mysql")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlserver"),", go to the ",(0,r.kt)("inlineCode",{parentName:"p"},"[tool.hatch.envs.<env_name>]")," sections in ",(0,r.kt)("inlineCode",{parentName:"p"},"pyproject.toml")," and add the dependency to the ",(0,r.kt)("inlineCode",{parentName:"p"},"extra-dependencies")," list. The other dependencies are inherited from the default environment."),(0,r.kt)("p",null,"Further information about adding dependencies to a hatch ",(0,r.kt)("inlineCode",{parentName:"p"},"pyproject.toml")," can be found ",(0,r.kt)("a",{parentName:"p",href:"https://hatch.pypa.io/latest/config/dependency/"},"on the hatch site")))}u.isMDXComponent=!0}}]);