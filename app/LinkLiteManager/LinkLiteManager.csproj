<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <Version>1.0.0-alpha.1</Version>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <ImplicitUsings>enable</ImplicitUsings>
    
    <!-- Append GitHash to Version if provided -->
    <Version Condition="'$(GitHash)' != ''">$(Version)+$(GitHash)</Version>
  </PropertyGroup>

  <PropertyGroup>
    <SpaRoot>../manager-frontend/</SpaRoot>
    <SpaDist>../manager-frontend/dist/</SpaDist>
    
    <SpaProxyServerUrl>https://localhost:45588</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>pnpm dev</SpaProxyLaunchCommand>
    
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <UserSecretsId>a9cbf0d3-ffad-42a5-9006-6595b585822b</UserSecretsId>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="ClacksMiddlware" Version="2.1.0" />
    <PackageReference Include="Flurl" Version="3.0.4" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.20.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />
    <PackageReference Include="Npgsql" Version="6.0.4" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="6.0.4" />
    <PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
    <PackageReference Include="Serilog.Sinks.PostgreSQL" Version="2.3.0" />
    <PackageReference Include="Serilog.Sinks.Postgresql.Alternative" Version="3.4.2" />
    <PackageReference Include="Serilog.Sinks.PostgreSQL.Configuration" Version="1.0.1" />
    <PackageReference Include="RabbitMQ.Client" Version="6.3.0" />
    <PackageReference Include="UoN.AspNetCore.VersionMiddleware" Version="1.1.1" />
    
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <PackageReference Include="MimeKit" Version="3.1.1" />
    <PackageReference Include="SendGrid" Version="9.25.2" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="Migrations" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'pnpm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm i" />
  </Target>

  <Target Name="PublishIncludeBuiltSpa" AfterTargets="ComputeFilesToPublish">
    <!--
      Unlike the template, before publishing we expect the JS resources
      to have been built in production mode externally e.g. in CI
    -->

    <!-- During Publish, we include the built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaDist)**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
